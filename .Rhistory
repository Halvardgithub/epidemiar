DeathsNorway <- read.table("C:/Users/Halvard/Documents/GitHub/Master-project/HMD-data/DeathsNorway.txt", sep = "", header = TRUE, fill = TRUE)
PopulationNorway <- read.table("C:/Users/Halvard/Documents/GitHub/Master-project/HMD-data/PopulationNorway.txt", sep = "", header = TRUE, fill = TRUE)
View(DeathsNorway)
View(PopulationNorway)
colnames(DeathsNorway)[5] <- "deaths"
colnames(PopulationNorway)[5] <- "population"
NorwayData <- cbind(DeathsNorway, PopulationNorway[, "population"])
NorwayData <- cbind(DeathsNorway, PopulationNorway[1:4272, "population"])
View(NorwayData)
colnames(NorwayData)[6] <- "population"
NorwayData$death_rate <- NorwayData$deaths/NorwayData$population
DR20_24 <- filter(NorwayData, age = "20-24")
DR20_24 <- filter(NorwayData, age == "20-24")
DR20_24 <- filter(NorwayData, Age == "20-24")
library(dplyr)
DR20_24 <- filter(NorwayData, Age == "20-24")
View(DR20_24)
plot(DR20_24$Year, DR20_24$death_rate)
library(ggpubr) #for plotlist in ggarrange
# install.packages('latex2exp')
# library(latex2exp)
box_plot_eval_harm <- function(df, mean, P, ymin, ymax, x_text_bool){
if(mean == "harm"){mean <- "sine"}
else {mean <- "offset sine"}
colnames(df) <- c("RW1", "ARW1")
# Reshape data to long format
df_long <- df %>%
pivot_longer(cols = everything(), names_to = "Category", values_to = "Value")
# Create the boxplot
eval_plot <- ggplot(df_long, aes(x = Category, y = Value, fill = Category)) +
geom_boxplot() +
ggtitle(paste0("Mu: ", mean, ", V: 1/", P)) + xlab("") + ylab("") +
ylim(ymin, ymax) +
scale_fill_manual(values = c("RW1" = "skyblue", "ARW1" = "orange")) +
theme(legend.position ="none") +
if(x_text_bool){theme()}
else{theme(axis.text.x = element_blank())}
return(eval_plot)
}
make_full_box_plot <- function(df, criteria, tau, prior){
#Input: df is a full_eval_df, criteria is either "RMSE" or "LS" while tau is either "CT" or "NCT"
# and prior is the specific prior for the precision
precs <- c("75", "150", "300")
means <- c("harm", "sHarm")
if(prior == "Gamma0,00005"){prior_name <- "Gamma(1, 0.00005)"}
else if(prior == "Gamma0,005"){prior_name <- "Gamma(1, 0.005)"}
else{prior_name <- "PC(1, 0.01)"}
plot_list <- list()
x_text_bool <- FALSE
for(m in 1:length(means)){
if(m == length(means)){x_text_bool <- TRUE} #decides if the x_text shows or not
RW1_str <- paste0(criteria, "_RW1_", means[m], "_") #needs "P_tau"
ARW1_str <- paste0(criteria, "_ARW1_", means[m], "_") #needs "P_tau"
df_exempt <- df[, c(paste0(RW1_str, precs[1], "_", tau), paste0(RW1_str, precs[2], "_", tau), paste0(RW1_str, precs[3], "_", tau), paste0(ARW1_str, precs[1], "_", tau), paste0(ARW1_str, precs[2], "_", tau), paste0(ARW1_str, precs[3], "_", tau))] #the relevant columns of df
#Find the min and max value to enforce the same y-axis for the same mean
ymax <- max(df_exempt)
ymin <- min(df_exempt)
for(p in 1:length(precs)){
plot_list[[(m-1)*3 + p]] <- box_plot_eval_harm(df_exempt[, c(p, p +
length(precs))],means[m], precs[p], ymin, ymax, x_text_bool)
}
}
plot <- ggarrange(plotlist = plot_list, ncol = 3, nrow = 2)
#making the title
title <- paste0(criteria, " for Wakefield data with ")
if(tau == "CT"){title <- paste0(title, "constant tau and ")}
else{title <- paste0(title, "non-constant tau and ")}
title <- paste0(title, prior_name)
plot_w_title <- annotate_figure(plot, top = textGrob(title, gp = (gpar(fontsize = 17))))
ggsave(filename = paste0("C:/Users/Halvard/Documents/GitHub/Master-project/Harmonius-data/Plots/", criteria, "_", tau, "_", prior, ".pdf"), plot = plot_w_title, width = 8, height = 5, units = "in")
return(plot_w_title)
}
load("C:/Users/Halvard/Documents/GitHub/Master-project/Harmonius-data/Gamma0,00005/full_eval_df")
make_full_box_plot(full_eval_df, "RMSE", "CT", "Gamma0,00005")
library(ggpubr) #for plotlist in ggarrange
library(grid)
library(ggplot2) #plotting
library(tidyr) #for pivot_longer?
library(ggpubr)
library(INLA) #posterior inference
library(MASS) #for ginv
load("C:/Users/Halvard/Documents/GitHub/Master-project/Harmonius-data/Gamma0,00005/full_eval_df")
make_full_box_plot(full_eval_df, "RMSE", "CT", "Gamma0,00005")
make_full_box_plot(full_eval_df, "LS", "CT", "Gamma0,00005")
make_full_box_plot(full_eval_df, "RMSE", "NCT", "Gamma0,00005")
make_full_box_plot(full_eval_df, "LS", "NCT", "Gamma0,00005")
load("C:/Users/Halvard/Documents/GitHub/Master-project/Harmonius-data/Gamma0,005/full_eval_df")
make_full_box_plot(full_eval_df, "RMSE", "CT", "Gamma0,005")
make_full_box_plot(full_eval_df, "LS", "CT", "Gamma0,005")
make_full_box_plot(full_eval_df, "RMSE", "NCT", "Gamma0,005")
make_full_box_plot(full_eval_df, "LS", "NCT", "Gamma0,005")
load("C:/Users/Halvard/Documents/GitHub/Master-project/Harmonius-data/PC/full_eval_df")
make_full_box_plot(full_eval_df, "RMSE", "CT", "PC")
make_full_box_plot(full_eval_df, "LS", "CT", "PC")
make_full_box_plot(full_eval_df, "RMSE", "NCT", "PC")
make_full_box_plot(full_eval_df, "LS", "NCT", "PC")
